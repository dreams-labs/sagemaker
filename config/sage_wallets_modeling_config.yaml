#SageMaker Modeling Config
framework:
    name: xgboost
    version: 1.7-1

metaparams:
    endpoint_preds_dir: temp/endpoint_predictions
    # instance_type: local
    # instance_type: ml.m5.2xlarge
    instance_type: ml.m6i.2xlarge
    # instance_type: ml.c5.9xlarge
    # instance_type: ml.c6i.4xlarge
    instance_count: 1
    # batch_trans_instance_type: ml.c5.2xlarge
    # batch_trans_instance_type: ml.m5.2xlarge
    batch_trans_instance_type: ml.m6i.xlarge
    batch_trans_instance_count: 1

script_mode:
    entry_point: single_model_entry.py
    # entry_point: temporal_cv_model_entry.py
    source_dir: ../src/script_modeling

# KeyParam Target Var
target:
    classification:
        threshold: 0.40  # if target > {threshold}, class = 1
    target_var: crypto_net_gain/crypto_inflows/base
    # target_var: crypto_net_gain/crypto_inflows/base

training:
    model_type: classification  # regression or classification
    eval_metric: aucpr
    # eval_metric: top_quantile
    custom_val:
        metric: cw_coin_return # top_percentile of top_scores
        top_quantile: 0.01  # percent to apply validation
        top_scores: 0.8  # scores above this are validated
    custom_filters:
        cw_balance|total_usd_balance|w1:
            cli: cw_balance
            min: 100
        # trading|total_volume|w1:
        #     cli: total_volume
        #     min: 500
        #     max: 10000000
        macro|btc_mvrv_z_score_last|w1:
            cli: btc_z_score
            min: 1.5
            # max: 10
        cw_mktcap|end_portfolio_wtd_market_cap/market_cap_filled|w1:
            cli: cw_mkt_cap
            min: 25000000
            # max: 150000000
        # trading|crypto_inflows|all_windows:
        # trading|unique_coins_traded|all_windows:
        # macro|btc_vdd_multiple_last|w1:
        # balance|total_usd_balance|w1:




    #KeyParam Hyperparameters
    hyperparameters:

        # trees
        # num_round: 5
        num_round: 500
        max_depth: 4
        min_child_weight: 10
        eta: 0.5
        early_stopping_rounds: 25

        # sampling
        subsample: 0.8
        colsample_bytree: 0.8
        scale_pos_weight: 3  # 1 to disable

        # feature selection
        alpha: 5   # 0 to disable
        lambda: 5  # 1 to disable
        gamma: 0.3

        # epoch shift
        epoch_shift: 0

    # KeyParam HPO Tuning
    hpo:  # Hyperparameter Optimization
        # enabled: True
        objective_metric_name: validation:aucpr
        objective_type: maximize
        param_ranges:
        # Allowed values in the built in mode: [colsample_bytree, num_parallel_tree, max_depth, colsample_bynode, lambda, eta, alpha, num_round, colsample_bylevel, subsample, min_child_weight, max_delta_step, gamma]
            # max_depth:  [2, 6]
            # min_child_weight:  [5, 500]
            # eta:        [0.05, 0.2]
            subsample: [0.6, 1.0]
            colsample_bytree: [0.6, 1.0]
            alpha:  [0, 10]
            lambda: [1, 20]
            gamma: [0, 5]
            scale_pos_weight: [1, 100]
            # threshold: [0.1, 0.9]
        # max_jobs: 1
        max_jobs: 50
        max_parallel_jobs: 10

predicting:
    y_pred_threshold: 0.8 # predictions above this are positive